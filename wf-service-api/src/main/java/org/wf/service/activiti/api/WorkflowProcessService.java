package org.wf.service.activiti.api;

import org.wf.service.model.ProcessStatusEntity;
import org.wf.service.model.WorkflowProcess;

/**
 * workflow process service
 * @author zhurunjia
 *
 */
public interface WorkflowProcessService {
	
	/**
	 * process new incoming request, <br>
	 * and return the PK ID(innerProcessId) generated by activiti itself.
	 * @param process
	 * @return
	 */
	String processNew(WorkflowProcess process);
	
	/**
	 * notify the user(source system) that this process is finally completed.
	 * @param innerProcessId
	 */
	void notifyWhenCompleted(String innerProcessId);
	
	/**
	 * suspend the specified process, which could be recovered by recoverProcess method
	 * @param innerProcessId
	 */
	void suspendProcess(String innerProcessId);
	
	/**
	 * recover the process
	 * @param innerProcessId
	 */
	void recoverProcess(String innerProcessId);
	
	/**
	 * abort the process, which could not be recovered
	 * @param innerProcessId
	 * @param abortReason the reason why abort the process
	 */
	void abortProcess(String innerProcessId, String abortReason);
	
	/**
	 * return process status and current task for the specified process
	 * @param innerProcessId
	 * @return
	 */
	ProcessStatusEntity getProcessStatus(String innerProcessId);

}
